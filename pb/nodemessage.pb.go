// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/nodemessage.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_MESSAGE_TYPE_PLACEHOLDER_DO_NOT_USE       MessageType = 0
	MessageType_VOTE                                      MessageType = 1
	MessageType_I_HAVE_BLOCK_PROPOSAL                     MessageType = 2
	MessageType_REQUEST_BLOCK_PROPOSAL                    MessageType = 3
	MessageType_REQUEST_BLOCK_PROPOSAL_REPLY              MessageType = 4
	MessageType_GET_CONSENSUS_STATE                       MessageType = 5
	MessageType_GET_CONSENSUS_STATE_REPLY                 MessageType = 6
	MessageType_GET_BLOCK_HEADERS                         MessageType = 7
	MessageType_GET_BLOCK_HEADERS_REPLY                   MessageType = 8
	MessageType_GET_BLOCKS                                MessageType = 9
	MessageType_GET_BLOCKS_REPLY                          MessageType = 10
	MessageType_RELAY                                     MessageType = 11
	MessageType_TRANSACTIONS                              MessageType = 12
	MessageType_BACKTRACK_SIGNATURE_CHAIN                 MessageType = 13
	MessageType_REQUEST_PROPOSAL_TRANSACTIONS             MessageType = 14
	MessageType_REQUEST_PROPOSAL_TRANSACTIONS_REPLY       MessageType = 15
	MessageType_I_HAVE_SIGNATURE_CHAIN_TRANSACTION        MessageType = 16
	MessageType_REQUEST_SIGNATURE_CHAIN_TRANSACTION       MessageType = 17
	MessageType_REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY MessageType = 18
	MessageType_PIN_SIGNATURE_CHAIN                       MessageType = 19
	MessageType_SIGNATURE_CHAIN_OBJECTION                 MessageType = 20
)

var MessageType_name = map[int32]string{
	0:  "MESSAGE_TYPE_PLACEHOLDER_DO_NOT_USE",
	1:  "VOTE",
	2:  "I_HAVE_BLOCK_PROPOSAL",
	3:  "REQUEST_BLOCK_PROPOSAL",
	4:  "REQUEST_BLOCK_PROPOSAL_REPLY",
	5:  "GET_CONSENSUS_STATE",
	6:  "GET_CONSENSUS_STATE_REPLY",
	7:  "GET_BLOCK_HEADERS",
	8:  "GET_BLOCK_HEADERS_REPLY",
	9:  "GET_BLOCKS",
	10: "GET_BLOCKS_REPLY",
	11: "RELAY",
	12: "TRANSACTIONS",
	13: "BACKTRACK_SIGNATURE_CHAIN",
	14: "REQUEST_PROPOSAL_TRANSACTIONS",
	15: "REQUEST_PROPOSAL_TRANSACTIONS_REPLY",
	16: "I_HAVE_SIGNATURE_CHAIN_TRANSACTION",
	17: "REQUEST_SIGNATURE_CHAIN_TRANSACTION",
	18: "REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY",
	19: "PIN_SIGNATURE_CHAIN",
	20: "SIGNATURE_CHAIN_OBJECTION",
}
var MessageType_value = map[string]int32{
	"MESSAGE_TYPE_PLACEHOLDER_DO_NOT_USE": 0,
	"VOTE":                                      1,
	"I_HAVE_BLOCK_PROPOSAL":                     2,
	"REQUEST_BLOCK_PROPOSAL":                    3,
	"REQUEST_BLOCK_PROPOSAL_REPLY":              4,
	"GET_CONSENSUS_STATE":                       5,
	"GET_CONSENSUS_STATE_REPLY":                 6,
	"GET_BLOCK_HEADERS":                         7,
	"GET_BLOCK_HEADERS_REPLY":                   8,
	"GET_BLOCKS":                                9,
	"GET_BLOCKS_REPLY":                          10,
	"RELAY":                                     11,
	"TRANSACTIONS":                              12,
	"BACKTRACK_SIGNATURE_CHAIN":                 13,
	"REQUEST_PROPOSAL_TRANSACTIONS":             14,
	"REQUEST_PROPOSAL_TRANSACTIONS_REPLY":       15,
	"I_HAVE_SIGNATURE_CHAIN_TRANSACTION":        16,
	"REQUEST_SIGNATURE_CHAIN_TRANSACTION":       17,
	"REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY": 18,
	"PIN_SIGNATURE_CHAIN":                       19,
	"SIGNATURE_CHAIN_OBJECTION":                 20,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{0}
}

// Message type that can be signed message
// Name doesn't matter, but value needs to match the value in MessageType
type AllowedSignedMessageType int32

const (
	AllowedSignedMessageType_ALLOW_SIGNED_PLACEHOLDER_DO_NOT_USE AllowedSignedMessageType = 0
)

var AllowedSignedMessageType_name = map[int32]string{
	0: "ALLOW_SIGNED_PLACEHOLDER_DO_NOT_USE",
}
var AllowedSignedMessageType_value = map[string]int32{
	"ALLOW_SIGNED_PLACEHOLDER_DO_NOT_USE": 0,
}

func (x AllowedSignedMessageType) String() string {
	return proto.EnumName(AllowedSignedMessageType_name, int32(x))
}
func (AllowedSignedMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{1}
}

// Message type that can be unsigned message
// Name doesn't matter, but value needs to match the value in MessageType
type AllowedUnsignedMessageType int32

const (
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_PLACEHOLDER_DO_NOT_USE                    AllowedUnsignedMessageType = 0
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_VOTE                                      AllowedUnsignedMessageType = 1
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_I_HAVE_BLOCK_PROPOSAL                     AllowedUnsignedMessageType = 2
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_REQUEST_BLOCK_PROPOSAL                    AllowedUnsignedMessageType = 3
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_REQUEST_BLOCK_REPLY                       AllowedUnsignedMessageType = 4
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_GET_CONSENSUS_STATE                       AllowedUnsignedMessageType = 5
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_GET_CONSENSUS_STATE_REPLY                 AllowedUnsignedMessageType = 6
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_GET_BLOCK_HEADERS                         AllowedUnsignedMessageType = 7
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_GET_BLOCK_HEADERS_REPLY                   AllowedUnsignedMessageType = 8
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_GET_BLOCKS                                AllowedUnsignedMessageType = 9
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_GET_BLOCKS_REPLY                          AllowedUnsignedMessageType = 10
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_RELAY                                     AllowedUnsignedMessageType = 11
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_TRANSACTIONS                              AllowedUnsignedMessageType = 12
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_BACKTRACK_SIGNATURE_CHAIN                 AllowedUnsignedMessageType = 13
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_REQUEST_PROPOSAL_TRANSACTIONS             AllowedUnsignedMessageType = 14
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_REQUEST_PROPOSAL_TRANSACTIONS_REPLY       AllowedUnsignedMessageType = 15
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_I_HAVE_SIGNATURE_CHAIN_TRANSACTION        AllowedUnsignedMessageType = 16
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_REQUEST_SIGNATURE_CHAIN_TRANSACTION       AllowedUnsignedMessageType = 17
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY AllowedUnsignedMessageType = 18
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_PIN_SIGNATURE_CHAIN                       AllowedUnsignedMessageType = 19
	AllowedUnsignedMessageType_ALLOW_UNSIGNED_SIGNATURE_CHAIN_OBJECTION                 AllowedUnsignedMessageType = 20
)

var AllowedUnsignedMessageType_name = map[int32]string{
	0:  "ALLOW_UNSIGNED_PLACEHOLDER_DO_NOT_USE",
	1:  "ALLOW_UNSIGNED_VOTE",
	2:  "ALLOW_UNSIGNED_I_HAVE_BLOCK_PROPOSAL",
	3:  "ALLOW_UNSIGNED_REQUEST_BLOCK_PROPOSAL",
	4:  "ALLOW_UNSIGNED_REQUEST_BLOCK_REPLY",
	5:  "ALLOW_UNSIGNED_GET_CONSENSUS_STATE",
	6:  "ALLOW_UNSIGNED_GET_CONSENSUS_STATE_REPLY",
	7:  "ALLOW_UNSIGNED_GET_BLOCK_HEADERS",
	8:  "ALLOW_UNSIGNED_GET_BLOCK_HEADERS_REPLY",
	9:  "ALLOW_UNSIGNED_GET_BLOCKS",
	10: "ALLOW_UNSIGNED_GET_BLOCKS_REPLY",
	11: "ALLOW_UNSIGNED_RELAY",
	12: "ALLOW_UNSIGNED_TRANSACTIONS",
	13: "ALLOW_UNSIGNED_BACKTRACK_SIGNATURE_CHAIN",
	14: "ALLOW_UNSIGNED_REQUEST_PROPOSAL_TRANSACTIONS",
	15: "ALLOW_UNSIGNED_REQUEST_PROPOSAL_TRANSACTIONS_REPLY",
	16: "ALLOW_UNSIGNED_I_HAVE_SIGNATURE_CHAIN_TRANSACTION",
	17: "ALLOW_UNSIGNED_REQUEST_SIGNATURE_CHAIN_TRANSACTION",
	18: "ALLOW_UNSIGNED_REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY",
	19: "ALLOW_UNSIGNED_PIN_SIGNATURE_CHAIN",
	20: "ALLOW_UNSIGNED_SIGNATURE_CHAIN_OBJECTION",
}
var AllowedUnsignedMessageType_value = map[string]int32{
	"ALLOW_UNSIGNED_PLACEHOLDER_DO_NOT_USE":                    0,
	"ALLOW_UNSIGNED_VOTE":                                      1,
	"ALLOW_UNSIGNED_I_HAVE_BLOCK_PROPOSAL":                     2,
	"ALLOW_UNSIGNED_REQUEST_BLOCK_PROPOSAL":                    3,
	"ALLOW_UNSIGNED_REQUEST_BLOCK_REPLY":                       4,
	"ALLOW_UNSIGNED_GET_CONSENSUS_STATE":                       5,
	"ALLOW_UNSIGNED_GET_CONSENSUS_STATE_REPLY":                 6,
	"ALLOW_UNSIGNED_GET_BLOCK_HEADERS":                         7,
	"ALLOW_UNSIGNED_GET_BLOCK_HEADERS_REPLY":                   8,
	"ALLOW_UNSIGNED_GET_BLOCKS":                                9,
	"ALLOW_UNSIGNED_GET_BLOCKS_REPLY":                          10,
	"ALLOW_UNSIGNED_RELAY":                                     11,
	"ALLOW_UNSIGNED_TRANSACTIONS":                              12,
	"ALLOW_UNSIGNED_BACKTRACK_SIGNATURE_CHAIN":                 13,
	"ALLOW_UNSIGNED_REQUEST_PROPOSAL_TRANSACTIONS":             14,
	"ALLOW_UNSIGNED_REQUEST_PROPOSAL_TRANSACTIONS_REPLY":       15,
	"ALLOW_UNSIGNED_I_HAVE_SIGNATURE_CHAIN_TRANSACTION":        16,
	"ALLOW_UNSIGNED_REQUEST_SIGNATURE_CHAIN_TRANSACTION":       17,
	"ALLOW_UNSIGNED_REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY": 18,
	"ALLOW_UNSIGNED_PIN_SIGNATURE_CHAIN":                       19,
	"ALLOW_UNSIGNED_SIGNATURE_CHAIN_OBJECTION":                 20,
}

func (x AllowedUnsignedMessageType) String() string {
	return proto.EnumName(AllowedUnsignedMessageType_name, int32(x))
}
func (AllowedUnsignedMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{2}
}

// Message type that can be sent as direct message
// Name doesn't matter, but value needs to match the value in MessageType
type AllowedDirectMessageType int32

const (
	AllowedDirectMessageType_ALLOW_DIRECT_PLACEHOLDER_DO_NOT_USE                    AllowedDirectMessageType = 0
	AllowedDirectMessageType_ALLOW_DIRECT_VOTE                                      AllowedDirectMessageType = 1
	AllowedDirectMessageType_ALLOW_DIRECT_I_HAVE_BLOCK_PROPOSAL                     AllowedDirectMessageType = 2
	AllowedDirectMessageType_ALLOW_DIRECT_REQUEST_BLOCK_PROPOSAL                    AllowedDirectMessageType = 3
	AllowedDirectMessageType_ALLOW_DIRECT_REQUEST_BLOCK_REPLY                       AllowedDirectMessageType = 4
	AllowedDirectMessageType_ALLOW_DIRECT_GET_CONSENSUS_STATE                       AllowedDirectMessageType = 5
	AllowedDirectMessageType_ALLOW_DIRECT_GET_CONSENSUS_STATE_REPLY                 AllowedDirectMessageType = 6
	AllowedDirectMessageType_ALLOW_DIRECT_GET_BLOCK_HEADERS                         AllowedDirectMessageType = 7
	AllowedDirectMessageType_ALLOW_DIRECT_GET_BLOCK_HEADERS_REPLY                   AllowedDirectMessageType = 8
	AllowedDirectMessageType_ALLOW_DIRECT_GET_BLOCKS                                AllowedDirectMessageType = 9
	AllowedDirectMessageType_ALLOW_DIRECT_GET_BLOCKS_REPLY                          AllowedDirectMessageType = 10
	AllowedDirectMessageType_ALLOW_DIRECT_BACKTRACK_SIGNATURE_CHAIN                 AllowedDirectMessageType = 13
	AllowedDirectMessageType_ALLOW_DIRECT_REQUEST_PROPOSAL_TRANSACTIONS             AllowedDirectMessageType = 14
	AllowedDirectMessageType_ALLOW_DIRECT_REQUEST_PROPOSAL_TRANSACTIONS_REPLY       AllowedDirectMessageType = 15
	AllowedDirectMessageType_ALLOW_DIRECT_I_HAVE_SIGNATURE_CHAIN_TRANSACTION        AllowedDirectMessageType = 16
	AllowedDirectMessageType_ALLOW_DIRECT_REQUEST_SIGNATURE_CHAIN_TRANSACTION       AllowedDirectMessageType = 17
	AllowedDirectMessageType_ALLOW_DIRECT_REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY AllowedDirectMessageType = 18
	AllowedDirectMessageType_ALLOW_DIRECT_PIN_SIGNATURE_CHAIN                       AllowedDirectMessageType = 19
	AllowedDirectMessageType_ALLOW_DIRECT_SIGNATURE_CHAIN_OBJECTION                 AllowedDirectMessageType = 20
)

var AllowedDirectMessageType_name = map[int32]string{
	0:  "ALLOW_DIRECT_PLACEHOLDER_DO_NOT_USE",
	1:  "ALLOW_DIRECT_VOTE",
	2:  "ALLOW_DIRECT_I_HAVE_BLOCK_PROPOSAL",
	3:  "ALLOW_DIRECT_REQUEST_BLOCK_PROPOSAL",
	4:  "ALLOW_DIRECT_REQUEST_BLOCK_REPLY",
	5:  "ALLOW_DIRECT_GET_CONSENSUS_STATE",
	6:  "ALLOW_DIRECT_GET_CONSENSUS_STATE_REPLY",
	7:  "ALLOW_DIRECT_GET_BLOCK_HEADERS",
	8:  "ALLOW_DIRECT_GET_BLOCK_HEADERS_REPLY",
	9:  "ALLOW_DIRECT_GET_BLOCKS",
	10: "ALLOW_DIRECT_GET_BLOCKS_REPLY",
	13: "ALLOW_DIRECT_BACKTRACK_SIGNATURE_CHAIN",
	14: "ALLOW_DIRECT_REQUEST_PROPOSAL_TRANSACTIONS",
	15: "ALLOW_DIRECT_REQUEST_PROPOSAL_TRANSACTIONS_REPLY",
	16: "ALLOW_DIRECT_I_HAVE_SIGNATURE_CHAIN_TRANSACTION",
	17: "ALLOW_DIRECT_REQUEST_SIGNATURE_CHAIN_TRANSACTION",
	18: "ALLOW_DIRECT_REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY",
	19: "ALLOW_DIRECT_PIN_SIGNATURE_CHAIN",
	20: "ALLOW_DIRECT_SIGNATURE_CHAIN_OBJECTION",
}
var AllowedDirectMessageType_value = map[string]int32{
	"ALLOW_DIRECT_PLACEHOLDER_DO_NOT_USE":                    0,
	"ALLOW_DIRECT_VOTE":                                      1,
	"ALLOW_DIRECT_I_HAVE_BLOCK_PROPOSAL":                     2,
	"ALLOW_DIRECT_REQUEST_BLOCK_PROPOSAL":                    3,
	"ALLOW_DIRECT_REQUEST_BLOCK_REPLY":                       4,
	"ALLOW_DIRECT_GET_CONSENSUS_STATE":                       5,
	"ALLOW_DIRECT_GET_CONSENSUS_STATE_REPLY":                 6,
	"ALLOW_DIRECT_GET_BLOCK_HEADERS":                         7,
	"ALLOW_DIRECT_GET_BLOCK_HEADERS_REPLY":                   8,
	"ALLOW_DIRECT_GET_BLOCKS":                                9,
	"ALLOW_DIRECT_GET_BLOCKS_REPLY":                          10,
	"ALLOW_DIRECT_BACKTRACK_SIGNATURE_CHAIN":                 13,
	"ALLOW_DIRECT_REQUEST_PROPOSAL_TRANSACTIONS":             14,
	"ALLOW_DIRECT_REQUEST_PROPOSAL_TRANSACTIONS_REPLY":       15,
	"ALLOW_DIRECT_I_HAVE_SIGNATURE_CHAIN_TRANSACTION":        16,
	"ALLOW_DIRECT_REQUEST_SIGNATURE_CHAIN_TRANSACTION":       17,
	"ALLOW_DIRECT_REQUEST_SIGNATURE_CHAIN_TRANSACTION_REPLY": 18,
	"ALLOW_DIRECT_PIN_SIGNATURE_CHAIN":                       19,
	"ALLOW_DIRECT_SIGNATURE_CHAIN_OBJECTION":                 20,
}

func (x AllowedDirectMessageType) String() string {
	return proto.EnumName(AllowedDirectMessageType_name, int32(x))
}
func (AllowedDirectMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{3}
}

// Message type that can be sent as relay message
// Name doesn't matter, but value needs to match the value in MessageType
type AllowedRelayMessageType int32

const (
	AllowedRelayMessageType_ALLOW_RELAY_PLACEHOLDER_DO_NOT_USE AllowedRelayMessageType = 0
	AllowedRelayMessageType_ALLOW_RELAY_RELAY                  AllowedRelayMessageType = 11
)

var AllowedRelayMessageType_name = map[int32]string{
	0:  "ALLOW_RELAY_PLACEHOLDER_DO_NOT_USE",
	11: "ALLOW_RELAY_RELAY",
}
var AllowedRelayMessageType_value = map[string]int32{
	"ALLOW_RELAY_PLACEHOLDER_DO_NOT_USE": 0,
	"ALLOW_RELAY_RELAY":                  11,
}

func (x AllowedRelayMessageType) String() string {
	return proto.EnumName(AllowedRelayMessageType_name, int32(x))
}
func (AllowedRelayMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{4}
}

// Message type that can be sent as broadcast_push message
// Name doesn't matter, but value needs to match the value in MessageType
type AllowedBroadcastPushMessageType int32

const (
	AllowedBroadcastPushMessageType_ALLOW_BROADCAST_PUSH_PLACEHOLDER_DO_NOT_USE AllowedBroadcastPushMessageType = 0
	AllowedBroadcastPushMessageType_ALLOW_BROADCAST_PUSH_TRANSACTIONS           AllowedBroadcastPushMessageType = 12
)

var AllowedBroadcastPushMessageType_name = map[int32]string{
	0:  "ALLOW_BROADCAST_PUSH_PLACEHOLDER_DO_NOT_USE",
	12: "ALLOW_BROADCAST_PUSH_TRANSACTIONS",
}
var AllowedBroadcastPushMessageType_value = map[string]int32{
	"ALLOW_BROADCAST_PUSH_PLACEHOLDER_DO_NOT_USE": 0,
	"ALLOW_BROADCAST_PUSH_TRANSACTIONS":           12,
}

func (x AllowedBroadcastPushMessageType) String() string {
	return proto.EnumName(AllowedBroadcastPushMessageType_name, int32(x))
}
func (AllowedBroadcastPushMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{5}
}

// Message type that can be sent as broadcast_pull message
// Name doesn't matter, but value needs to match the value in MessageType
type AllowedBroadcastPullMessageType int32

const (
	AllowedBroadcastPullMessageType_ALLOW_BROADCAST_PULL_PLACEHOLDER_DO_NOT_USE AllowedBroadcastPullMessageType = 0
)

var AllowedBroadcastPullMessageType_name = map[int32]string{
	0: "ALLOW_BROADCAST_PULL_PLACEHOLDER_DO_NOT_USE",
}
var AllowedBroadcastPullMessageType_value = map[string]int32{
	"ALLOW_BROADCAST_PULL_PLACEHOLDER_DO_NOT_USE": 0,
}

func (x AllowedBroadcastPullMessageType) String() string {
	return proto.EnumName(AllowedBroadcastPullMessageType_name, int32(x))
}
func (AllowedBroadcastPullMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{6}
}

// Message type that can be sent as broadcast_tree message
// Name doesn't matter, but value needs to match the value in MessageType
type AllowedBroadcastTreeMessageType int32

const (
	AllowedBroadcastTreeMessageType_ALLOW_BROADCAST_TREE_PLACEHOLDER_DO_NOT_USE AllowedBroadcastTreeMessageType = 0
	AllowedBroadcastTreeMessageType_ALLOW_BROADCAST_TREE_TRANSACTIONS           AllowedBroadcastTreeMessageType = 12
)

var AllowedBroadcastTreeMessageType_name = map[int32]string{
	0:  "ALLOW_BROADCAST_TREE_PLACEHOLDER_DO_NOT_USE",
	12: "ALLOW_BROADCAST_TREE_TRANSACTIONS",
}
var AllowedBroadcastTreeMessageType_value = map[string]int32{
	"ALLOW_BROADCAST_TREE_PLACEHOLDER_DO_NOT_USE": 0,
	"ALLOW_BROADCAST_TREE_TRANSACTIONS":           12,
}

func (x AllowedBroadcastTreeMessageType) String() string {
	return proto.EnumName(AllowedBroadcastTreeMessageType_name, int32(x))
}
func (AllowedBroadcastTreeMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{7}
}

type RequestTransactionType int32

const (
	RequestTransactionType_REQUEST_FULL_TRANSACTION       RequestTransactionType = 0
	RequestTransactionType_REQUEST_TRANSACTION_HASH       RequestTransactionType = 1
	RequestTransactionType_REQUEST_TRANSACTION_SHORT_HASH RequestTransactionType = 2
)

var RequestTransactionType_name = map[int32]string{
	0: "REQUEST_FULL_TRANSACTION",
	1: "REQUEST_TRANSACTION_HASH",
	2: "REQUEST_TRANSACTION_SHORT_HASH",
}
var RequestTransactionType_value = map[string]int32{
	"REQUEST_FULL_TRANSACTION":       0,
	"REQUEST_TRANSACTION_HASH":       1,
	"REQUEST_TRANSACTION_SHORT_HASH": 2,
}

func (x RequestTransactionType) String() string {
	return proto.EnumName(RequestTransactionType_name, int32(x))
}
func (RequestTransactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{8}
}

type UnsignedMessage struct {
	MessageType          MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=pb.MessageType" json:"message_type,omitempty"`
	Message              []byte      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UnsignedMessage) Reset()         { *m = UnsignedMessage{} }
func (m *UnsignedMessage) String() string { return proto.CompactTextString(m) }
func (*UnsignedMessage) ProtoMessage()    {}
func (*UnsignedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{0}
}
func (m *UnsignedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsignedMessage.Unmarshal(m, b)
}
func (m *UnsignedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsignedMessage.Marshal(b, m, deterministic)
}
func (dst *UnsignedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsignedMessage.Merge(dst, src)
}
func (m *UnsignedMessage) XXX_Size() int {
	return xxx_messageInfo_UnsignedMessage.Size(m)
}
func (m *UnsignedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsignedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UnsignedMessage proto.InternalMessageInfo

func (m *UnsignedMessage) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_MESSAGE_TYPE_PLACEHOLDER_DO_NOT_USE
}

func (m *UnsignedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type SignedMessage struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedMessage) Reset()         { *m = SignedMessage{} }
func (m *SignedMessage) String() string { return proto.CompactTextString(m) }
func (*SignedMessage) ProtoMessage()    {}
func (*SignedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{1}
}
func (m *SignedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedMessage.Unmarshal(m, b)
}
func (m *SignedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedMessage.Marshal(b, m, deterministic)
}
func (dst *SignedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedMessage.Merge(dst, src)
}
func (m *SignedMessage) XXX_Size() int {
	return xxx_messageInfo_SignedMessage.Size(m)
}
func (m *SignedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SignedMessage proto.InternalMessageInfo

func (m *SignedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SignedMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Vote struct {
	Height               uint32   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{2}
}
func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (dst *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(dst, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Vote) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type IHaveBlockProposal struct {
	Height               uint32   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IHaveBlockProposal) Reset()         { *m = IHaveBlockProposal{} }
func (m *IHaveBlockProposal) String() string { return proto.CompactTextString(m) }
func (*IHaveBlockProposal) ProtoMessage()    {}
func (*IHaveBlockProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{3}
}
func (m *IHaveBlockProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IHaveBlockProposal.Unmarshal(m, b)
}
func (m *IHaveBlockProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IHaveBlockProposal.Marshal(b, m, deterministic)
}
func (dst *IHaveBlockProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IHaveBlockProposal.Merge(dst, src)
}
func (m *IHaveBlockProposal) XXX_Size() int {
	return xxx_messageInfo_IHaveBlockProposal.Size(m)
}
func (m *IHaveBlockProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_IHaveBlockProposal.DiscardUnknown(m)
}

var xxx_messageInfo_IHaveBlockProposal proto.InternalMessageInfo

func (m *IHaveBlockProposal) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *IHaveBlockProposal) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type RequestBlockProposal struct {
	BlockHash            []byte                 `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Type                 RequestTransactionType `protobuf:"varint,2,opt,name=type,proto3,enum=pb.RequestTransactionType" json:"type,omitempty"`
	ShortHashSalt        []byte                 `protobuf:"bytes,3,opt,name=short_hash_salt,json=shortHashSalt,proto3" json:"short_hash_salt,omitempty"`
	ShortHashSize        uint32                 `protobuf:"varint,4,opt,name=short_hash_size,json=shortHashSize,proto3" json:"short_hash_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RequestBlockProposal) Reset()         { *m = RequestBlockProposal{} }
func (m *RequestBlockProposal) String() string { return proto.CompactTextString(m) }
func (*RequestBlockProposal) ProtoMessage()    {}
func (*RequestBlockProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{4}
}
func (m *RequestBlockProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBlockProposal.Unmarshal(m, b)
}
func (m *RequestBlockProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBlockProposal.Marshal(b, m, deterministic)
}
func (dst *RequestBlockProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBlockProposal.Merge(dst, src)
}
func (m *RequestBlockProposal) XXX_Size() int {
	return xxx_messageInfo_RequestBlockProposal.Size(m)
}
func (m *RequestBlockProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBlockProposal.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBlockProposal proto.InternalMessageInfo

func (m *RequestBlockProposal) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *RequestBlockProposal) GetType() RequestTransactionType {
	if m != nil {
		return m.Type
	}
	return RequestTransactionType_REQUEST_FULL_TRANSACTION
}

func (m *RequestBlockProposal) GetShortHashSalt() []byte {
	if m != nil {
		return m.ShortHashSalt
	}
	return nil
}

func (m *RequestBlockProposal) GetShortHashSize() uint32 {
	if m != nil {
		return m.ShortHashSize
	}
	return 0
}

type RequestBlockProposalReply struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	TransactionsHash     [][]byte `protobuf:"bytes,2,rep,name=transactions_hash,json=transactionsHash,proto3" json:"transactions_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestBlockProposalReply) Reset()         { *m = RequestBlockProposalReply{} }
func (m *RequestBlockProposalReply) String() string { return proto.CompactTextString(m) }
func (*RequestBlockProposalReply) ProtoMessage()    {}
func (*RequestBlockProposalReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{5}
}
func (m *RequestBlockProposalReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBlockProposalReply.Unmarshal(m, b)
}
func (m *RequestBlockProposalReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBlockProposalReply.Marshal(b, m, deterministic)
}
func (dst *RequestBlockProposalReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBlockProposalReply.Merge(dst, src)
}
func (m *RequestBlockProposalReply) XXX_Size() int {
	return xxx_messageInfo_RequestBlockProposalReply.Size(m)
}
func (m *RequestBlockProposalReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBlockProposalReply.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBlockProposalReply proto.InternalMessageInfo

func (m *RequestBlockProposalReply) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *RequestBlockProposalReply) GetTransactionsHash() [][]byte {
	if m != nil {
		return m.TransactionsHash
	}
	return nil
}

type RequestProposalTransactions struct {
	BlockHash            []byte                 `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Type                 RequestTransactionType `protobuf:"varint,2,opt,name=type,proto3,enum=pb.RequestTransactionType" json:"type,omitempty"`
	ShortHashSalt        []byte                 `protobuf:"bytes,3,opt,name=short_hash_salt,json=shortHashSalt,proto3" json:"short_hash_salt,omitempty"`
	ShortHashSize        uint32                 `protobuf:"varint,4,opt,name=short_hash_size,json=shortHashSize,proto3" json:"short_hash_size,omitempty"`
	TransactionsHash     [][]byte               `protobuf:"bytes,5,rep,name=transactions_hash,json=transactionsHash,proto3" json:"transactions_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RequestProposalTransactions) Reset()         { *m = RequestProposalTransactions{} }
func (m *RequestProposalTransactions) String() string { return proto.CompactTextString(m) }
func (*RequestProposalTransactions) ProtoMessage()    {}
func (*RequestProposalTransactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{6}
}
func (m *RequestProposalTransactions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestProposalTransactions.Unmarshal(m, b)
}
func (m *RequestProposalTransactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestProposalTransactions.Marshal(b, m, deterministic)
}
func (dst *RequestProposalTransactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestProposalTransactions.Merge(dst, src)
}
func (m *RequestProposalTransactions) XXX_Size() int {
	return xxx_messageInfo_RequestProposalTransactions.Size(m)
}
func (m *RequestProposalTransactions) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestProposalTransactions.DiscardUnknown(m)
}

var xxx_messageInfo_RequestProposalTransactions proto.InternalMessageInfo

func (m *RequestProposalTransactions) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *RequestProposalTransactions) GetType() RequestTransactionType {
	if m != nil {
		return m.Type
	}
	return RequestTransactionType_REQUEST_FULL_TRANSACTION
}

func (m *RequestProposalTransactions) GetShortHashSalt() []byte {
	if m != nil {
		return m.ShortHashSalt
	}
	return nil
}

func (m *RequestProposalTransactions) GetShortHashSize() uint32 {
	if m != nil {
		return m.ShortHashSize
	}
	return 0
}

func (m *RequestProposalTransactions) GetTransactionsHash() [][]byte {
	if m != nil {
		return m.TransactionsHash
	}
	return nil
}

type RequestProposalTransactionsReply struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RequestProposalTransactionsReply) Reset()         { *m = RequestProposalTransactionsReply{} }
func (m *RequestProposalTransactionsReply) String() string { return proto.CompactTextString(m) }
func (*RequestProposalTransactionsReply) ProtoMessage()    {}
func (*RequestProposalTransactionsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{7}
}
func (m *RequestProposalTransactionsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestProposalTransactionsReply.Unmarshal(m, b)
}
func (m *RequestProposalTransactionsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestProposalTransactionsReply.Marshal(b, m, deterministic)
}
func (dst *RequestProposalTransactionsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestProposalTransactionsReply.Merge(dst, src)
}
func (m *RequestProposalTransactionsReply) XXX_Size() int {
	return xxx_messageInfo_RequestProposalTransactionsReply.Size(m)
}
func (m *RequestProposalTransactionsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestProposalTransactionsReply.DiscardUnknown(m)
}

var xxx_messageInfo_RequestProposalTransactionsReply proto.InternalMessageInfo

func (m *RequestProposalTransactionsReply) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetConsensusState struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConsensusState) Reset()         { *m = GetConsensusState{} }
func (m *GetConsensusState) String() string { return proto.CompactTextString(m) }
func (*GetConsensusState) ProtoMessage()    {}
func (*GetConsensusState) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{8}
}
func (m *GetConsensusState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConsensusState.Unmarshal(m, b)
}
func (m *GetConsensusState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConsensusState.Marshal(b, m, deterministic)
}
func (dst *GetConsensusState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConsensusState.Merge(dst, src)
}
func (m *GetConsensusState) XXX_Size() int {
	return xxx_messageInfo_GetConsensusState.Size(m)
}
func (m *GetConsensusState) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConsensusState.DiscardUnknown(m)
}

var xxx_messageInfo_GetConsensusState proto.InternalMessageInfo

type GetConsensusStateReply struct {
	LedgerBlockHash      []byte    `protobuf:"bytes,2,opt,name=ledger_block_hash,json=ledgerBlockHash,proto3" json:"ledger_block_hash,omitempty"`
	LedgerHeight         uint32    `protobuf:"varint,1,opt,name=ledger_height,json=ledgerHeight,proto3" json:"ledger_height,omitempty"`
	ConsensusHeight      uint32    `protobuf:"varint,3,opt,name=consensus_height,json=consensusHeight,proto3" json:"consensus_height,omitempty"`
	MinVerifiableHeight  uint32    `protobuf:"varint,5,opt,name=min_verifiable_height,json=minVerifiableHeight,proto3" json:"min_verifiable_height,omitempty"`
	SyncState            SyncState `protobuf:"varint,4,opt,name=sync_state,json=syncState,proto3,enum=pb.SyncState" json:"sync_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetConsensusStateReply) Reset()         { *m = GetConsensusStateReply{} }
func (m *GetConsensusStateReply) String() string { return proto.CompactTextString(m) }
func (*GetConsensusStateReply) ProtoMessage()    {}
func (*GetConsensusStateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{9}
}
func (m *GetConsensusStateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConsensusStateReply.Unmarshal(m, b)
}
func (m *GetConsensusStateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConsensusStateReply.Marshal(b, m, deterministic)
}
func (dst *GetConsensusStateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConsensusStateReply.Merge(dst, src)
}
func (m *GetConsensusStateReply) XXX_Size() int {
	return xxx_messageInfo_GetConsensusStateReply.Size(m)
}
func (m *GetConsensusStateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConsensusStateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetConsensusStateReply proto.InternalMessageInfo

func (m *GetConsensusStateReply) GetLedgerBlockHash() []byte {
	if m != nil {
		return m.LedgerBlockHash
	}
	return nil
}

func (m *GetConsensusStateReply) GetLedgerHeight() uint32 {
	if m != nil {
		return m.LedgerHeight
	}
	return 0
}

func (m *GetConsensusStateReply) GetConsensusHeight() uint32 {
	if m != nil {
		return m.ConsensusHeight
	}
	return 0
}

func (m *GetConsensusStateReply) GetMinVerifiableHeight() uint32 {
	if m != nil {
		return m.MinVerifiableHeight
	}
	return 0
}

func (m *GetConsensusStateReply) GetSyncState() SyncState {
	if m != nil {
		return m.SyncState
	}
	return SyncState_WAIT_FOR_SYNCING
}

type GetBlockHeaders struct {
	StartHeight          uint32   `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight            uint32   `protobuf:"varint,2,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockHeaders) Reset()         { *m = GetBlockHeaders{} }
func (m *GetBlockHeaders) String() string { return proto.CompactTextString(m) }
func (*GetBlockHeaders) ProtoMessage()    {}
func (*GetBlockHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{10}
}
func (m *GetBlockHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHeaders.Unmarshal(m, b)
}
func (m *GetBlockHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHeaders.Marshal(b, m, deterministic)
}
func (dst *GetBlockHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHeaders.Merge(dst, src)
}
func (m *GetBlockHeaders) XXX_Size() int {
	return xxx_messageInfo_GetBlockHeaders.Size(m)
}
func (m *GetBlockHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHeaders proto.InternalMessageInfo

func (m *GetBlockHeaders) GetStartHeight() uint32 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *GetBlockHeaders) GetEndHeight() uint32 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

type GetBlockHeadersReply struct {
	BlockHeaders         []*Header `protobuf:"bytes,1,rep,name=block_headers,json=blockHeaders,proto3" json:"block_headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetBlockHeadersReply) Reset()         { *m = GetBlockHeadersReply{} }
func (m *GetBlockHeadersReply) String() string { return proto.CompactTextString(m) }
func (*GetBlockHeadersReply) ProtoMessage()    {}
func (*GetBlockHeadersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{11}
}
func (m *GetBlockHeadersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHeadersReply.Unmarshal(m, b)
}
func (m *GetBlockHeadersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHeadersReply.Marshal(b, m, deterministic)
}
func (dst *GetBlockHeadersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHeadersReply.Merge(dst, src)
}
func (m *GetBlockHeadersReply) XXX_Size() int {
	return xxx_messageInfo_GetBlockHeadersReply.Size(m)
}
func (m *GetBlockHeadersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHeadersReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHeadersReply proto.InternalMessageInfo

func (m *GetBlockHeadersReply) GetBlockHeaders() []*Header {
	if m != nil {
		return m.BlockHeaders
	}
	return nil
}

type GetBlocks struct {
	StartHeight          uint32   `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight            uint32   `protobuf:"varint,2,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlocks) Reset()         { *m = GetBlocks{} }
func (m *GetBlocks) String() string { return proto.CompactTextString(m) }
func (*GetBlocks) ProtoMessage()    {}
func (*GetBlocks) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{12}
}
func (m *GetBlocks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocks.Unmarshal(m, b)
}
func (m *GetBlocks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocks.Marshal(b, m, deterministic)
}
func (dst *GetBlocks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocks.Merge(dst, src)
}
func (m *GetBlocks) XXX_Size() int {
	return xxx_messageInfo_GetBlocks.Size(m)
}
func (m *GetBlocks) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocks.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocks proto.InternalMessageInfo

func (m *GetBlocks) GetStartHeight() uint32 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *GetBlocks) GetEndHeight() uint32 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

type GetBlocksReply struct {
	Blocks               []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlocksReply) Reset()         { *m = GetBlocksReply{} }
func (m *GetBlocksReply) String() string { return proto.CompactTextString(m) }
func (*GetBlocksReply) ProtoMessage()    {}
func (*GetBlocksReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{13}
}
func (m *GetBlocksReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlocksReply.Unmarshal(m, b)
}
func (m *GetBlocksReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlocksReply.Marshal(b, m, deterministic)
}
func (dst *GetBlocksReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlocksReply.Merge(dst, src)
}
func (m *GetBlocksReply) XXX_Size() int {
	return xxx_messageInfo_GetBlocksReply.Size(m)
}
func (m *GetBlocksReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlocksReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlocksReply proto.InternalMessageInfo

func (m *GetBlocksReply) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type Relay struct {
	SrcIdentifier     string `protobuf:"bytes,1,opt,name=src_identifier,json=srcIdentifier,proto3" json:"src_identifier,omitempty"`
	SrcPubkey         []byte `protobuf:"bytes,6,opt,name=src_pubkey,json=srcPubkey,proto3" json:"src_pubkey,omitempty"`
	DestId            []byte `protobuf:"bytes,2,opt,name=dest_id,json=destId,proto3" json:"dest_id,omitempty"`
	Payload           []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	MaxHoldingSeconds uint32 `protobuf:"varint,5,opt,name=max_holding_seconds,json=maxHoldingSeconds,proto3" json:"max_holding_seconds,omitempty"`
	// It is important to use block hash instead of block height here to allow
	// node in syncing state to be able to sign the sigchain elem.
	BlockHash            []byte   `protobuf:"bytes,7,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	LastHash             []byte   `protobuf:"bytes,8,opt,name=last_hash,json=lastHash,proto3" json:"last_hash,omitempty"`
	SigChainLen          uint32   `protobuf:"varint,9,opt,name=sig_chain_len,json=sigChainLen,proto3" json:"sig_chain_len,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Relay) Reset()         { *m = Relay{} }
func (m *Relay) String() string { return proto.CompactTextString(m) }
func (*Relay) ProtoMessage()    {}
func (*Relay) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{14}
}
func (m *Relay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Relay.Unmarshal(m, b)
}
func (m *Relay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Relay.Marshal(b, m, deterministic)
}
func (dst *Relay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Relay.Merge(dst, src)
}
func (m *Relay) XXX_Size() int {
	return xxx_messageInfo_Relay.Size(m)
}
func (m *Relay) XXX_DiscardUnknown() {
	xxx_messageInfo_Relay.DiscardUnknown(m)
}

var xxx_messageInfo_Relay proto.InternalMessageInfo

func (m *Relay) GetSrcIdentifier() string {
	if m != nil {
		return m.SrcIdentifier
	}
	return ""
}

func (m *Relay) GetSrcPubkey() []byte {
	if m != nil {
		return m.SrcPubkey
	}
	return nil
}

func (m *Relay) GetDestId() []byte {
	if m != nil {
		return m.DestId
	}
	return nil
}

func (m *Relay) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Relay) GetMaxHoldingSeconds() uint32 {
	if m != nil {
		return m.MaxHoldingSeconds
	}
	return 0
}

func (m *Relay) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *Relay) GetLastHash() []byte {
	if m != nil {
		return m.LastHash
	}
	return nil
}

func (m *Relay) GetSigChainLen() uint32 {
	if m != nil {
		return m.SigChainLen
	}
	return 0
}

type Transactions struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Transactions) Reset()         { *m = Transactions{} }
func (m *Transactions) String() string { return proto.CompactTextString(m) }
func (*Transactions) ProtoMessage()    {}
func (*Transactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{15}
}
func (m *Transactions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transactions.Unmarshal(m, b)
}
func (m *Transactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transactions.Marshal(b, m, deterministic)
}
func (dst *Transactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transactions.Merge(dst, src)
}
func (m *Transactions) XXX_Size() int {
	return xxx_messageInfo_Transactions.Size(m)
}
func (m *Transactions) XXX_DiscardUnknown() {
	xxx_messageInfo_Transactions.DiscardUnknown(m)
}

var xxx_messageInfo_Transactions proto.InternalMessageInfo

func (m *Transactions) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type BacktrackSignatureChain struct {
	SigChainElems        []*SigChainElem `protobuf:"bytes,1,rep,name=sig_chain_elems,json=sigChainElems,proto3" json:"sig_chain_elems,omitempty"`
	Hash                 []byte          `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BacktrackSignatureChain) Reset()         { *m = BacktrackSignatureChain{} }
func (m *BacktrackSignatureChain) String() string { return proto.CompactTextString(m) }
func (*BacktrackSignatureChain) ProtoMessage()    {}
func (*BacktrackSignatureChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{16}
}
func (m *BacktrackSignatureChain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BacktrackSignatureChain.Unmarshal(m, b)
}
func (m *BacktrackSignatureChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BacktrackSignatureChain.Marshal(b, m, deterministic)
}
func (dst *BacktrackSignatureChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BacktrackSignatureChain.Merge(dst, src)
}
func (m *BacktrackSignatureChain) XXX_Size() int {
	return xxx_messageInfo_BacktrackSignatureChain.Size(m)
}
func (m *BacktrackSignatureChain) XXX_DiscardUnknown() {
	xxx_messageInfo_BacktrackSignatureChain.DiscardUnknown(m)
}

var xxx_messageInfo_BacktrackSignatureChain proto.InternalMessageInfo

func (m *BacktrackSignatureChain) GetSigChainElems() []*SigChainElem {
	if m != nil {
		return m.SigChainElems
	}
	return nil
}

func (m *BacktrackSignatureChain) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type IHaveSignatureChainTransaction struct {
	Height               uint32   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	SignatureHash        []byte   `protobuf:"bytes,2,opt,name=signature_hash,json=signatureHash,proto3" json:"signature_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IHaveSignatureChainTransaction) Reset()         { *m = IHaveSignatureChainTransaction{} }
func (m *IHaveSignatureChainTransaction) String() string { return proto.CompactTextString(m) }
func (*IHaveSignatureChainTransaction) ProtoMessage()    {}
func (*IHaveSignatureChainTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{17}
}
func (m *IHaveSignatureChainTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IHaveSignatureChainTransaction.Unmarshal(m, b)
}
func (m *IHaveSignatureChainTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IHaveSignatureChainTransaction.Marshal(b, m, deterministic)
}
func (dst *IHaveSignatureChainTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IHaveSignatureChainTransaction.Merge(dst, src)
}
func (m *IHaveSignatureChainTransaction) XXX_Size() int {
	return xxx_messageInfo_IHaveSignatureChainTransaction.Size(m)
}
func (m *IHaveSignatureChainTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_IHaveSignatureChainTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_IHaveSignatureChainTransaction proto.InternalMessageInfo

func (m *IHaveSignatureChainTransaction) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *IHaveSignatureChainTransaction) GetSignatureHash() []byte {
	if m != nil {
		return m.SignatureHash
	}
	return nil
}

type RequestSignatureChainTransaction struct {
	SignatureHash        []byte   `protobuf:"bytes,1,opt,name=signature_hash,json=signatureHash,proto3" json:"signature_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestSignatureChainTransaction) Reset()         { *m = RequestSignatureChainTransaction{} }
func (m *RequestSignatureChainTransaction) String() string { return proto.CompactTextString(m) }
func (*RequestSignatureChainTransaction) ProtoMessage()    {}
func (*RequestSignatureChainTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{18}
}
func (m *RequestSignatureChainTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSignatureChainTransaction.Unmarshal(m, b)
}
func (m *RequestSignatureChainTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSignatureChainTransaction.Marshal(b, m, deterministic)
}
func (dst *RequestSignatureChainTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSignatureChainTransaction.Merge(dst, src)
}
func (m *RequestSignatureChainTransaction) XXX_Size() int {
	return xxx_messageInfo_RequestSignatureChainTransaction.Size(m)
}
func (m *RequestSignatureChainTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSignatureChainTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSignatureChainTransaction proto.InternalMessageInfo

func (m *RequestSignatureChainTransaction) GetSignatureHash() []byte {
	if m != nil {
		return m.SignatureHash
	}
	return nil
}

type RequestSignatureChainTransactionReply struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RequestSignatureChainTransactionReply) Reset()         { *m = RequestSignatureChainTransactionReply{} }
func (m *RequestSignatureChainTransactionReply) String() string { return proto.CompactTextString(m) }
func (*RequestSignatureChainTransactionReply) ProtoMessage()    {}
func (*RequestSignatureChainTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{19}
}
func (m *RequestSignatureChainTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSignatureChainTransactionReply.Unmarshal(m, b)
}
func (m *RequestSignatureChainTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSignatureChainTransactionReply.Marshal(b, m, deterministic)
}
func (dst *RequestSignatureChainTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSignatureChainTransactionReply.Merge(dst, src)
}
func (m *RequestSignatureChainTransactionReply) XXX_Size() int {
	return xxx_messageInfo_RequestSignatureChainTransactionReply.Size(m)
}
func (m *RequestSignatureChainTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSignatureChainTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSignatureChainTransactionReply proto.InternalMessageInfo

func (m *RequestSignatureChainTransactionReply) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type PinSignatureChain struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PinSignatureChain) Reset()         { *m = PinSignatureChain{} }
func (m *PinSignatureChain) String() string { return proto.CompactTextString(m) }
func (*PinSignatureChain) ProtoMessage()    {}
func (*PinSignatureChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{20}
}
func (m *PinSignatureChain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinSignatureChain.Unmarshal(m, b)
}
func (m *PinSignatureChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinSignatureChain.Marshal(b, m, deterministic)
}
func (dst *PinSignatureChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinSignatureChain.Merge(dst, src)
}
func (m *PinSignatureChain) XXX_Size() int {
	return xxx_messageInfo_PinSignatureChain.Size(m)
}
func (m *PinSignatureChain) XXX_DiscardUnknown() {
	xxx_messageInfo_PinSignatureChain.DiscardUnknown(m)
}

var xxx_messageInfo_PinSignatureChain proto.InternalMessageInfo

func (m *PinSignatureChain) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type SignatureChainObjectionUnsigned struct {
	Height               uint32   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	SignatureHash        []byte   `protobuf:"bytes,2,opt,name=signature_hash,json=signatureHash,proto3" json:"signature_hash,omitempty"`
	ReporterPubkey       []byte   `protobuf:"bytes,3,opt,name=reporter_pubkey,json=reporterPubkey,proto3" json:"reporter_pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignatureChainObjectionUnsigned) Reset()         { *m = SignatureChainObjectionUnsigned{} }
func (m *SignatureChainObjectionUnsigned) String() string { return proto.CompactTextString(m) }
func (*SignatureChainObjectionUnsigned) ProtoMessage()    {}
func (*SignatureChainObjectionUnsigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{21}
}
func (m *SignatureChainObjectionUnsigned) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureChainObjectionUnsigned.Unmarshal(m, b)
}
func (m *SignatureChainObjectionUnsigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureChainObjectionUnsigned.Marshal(b, m, deterministic)
}
func (dst *SignatureChainObjectionUnsigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureChainObjectionUnsigned.Merge(dst, src)
}
func (m *SignatureChainObjectionUnsigned) XXX_Size() int {
	return xxx_messageInfo_SignatureChainObjectionUnsigned.Size(m)
}
func (m *SignatureChainObjectionUnsigned) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureChainObjectionUnsigned.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureChainObjectionUnsigned proto.InternalMessageInfo

func (m *SignatureChainObjectionUnsigned) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SignatureChainObjectionUnsigned) GetSignatureHash() []byte {
	if m != nil {
		return m.SignatureHash
	}
	return nil
}

func (m *SignatureChainObjectionUnsigned) GetReporterPubkey() []byte {
	if m != nil {
		return m.ReporterPubkey
	}
	return nil
}

type SignatureChainObjectionSigned struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignatureChainObjectionSigned) Reset()         { *m = SignatureChainObjectionSigned{} }
func (m *SignatureChainObjectionSigned) String() string { return proto.CompactTextString(m) }
func (*SignatureChainObjectionSigned) ProtoMessage()    {}
func (*SignatureChainObjectionSigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_nodemessage_f46acc8cd5d29581, []int{22}
}
func (m *SignatureChainObjectionSigned) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureChainObjectionSigned.Unmarshal(m, b)
}
func (m *SignatureChainObjectionSigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureChainObjectionSigned.Marshal(b, m, deterministic)
}
func (dst *SignatureChainObjectionSigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureChainObjectionSigned.Merge(dst, src)
}
func (m *SignatureChainObjectionSigned) XXX_Size() int {
	return xxx_messageInfo_SignatureChainObjectionSigned.Size(m)
}
func (m *SignatureChainObjectionSigned) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureChainObjectionSigned.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureChainObjectionSigned proto.InternalMessageInfo

func (m *SignatureChainObjectionSigned) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SignatureChainObjectionSigned) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*UnsignedMessage)(nil), "pb.UnsignedMessage")
	proto.RegisterType((*SignedMessage)(nil), "pb.SignedMessage")
	proto.RegisterType((*Vote)(nil), "pb.Vote")
	proto.RegisterType((*IHaveBlockProposal)(nil), "pb.IHaveBlockProposal")
	proto.RegisterType((*RequestBlockProposal)(nil), "pb.RequestBlockProposal")
	proto.RegisterType((*RequestBlockProposalReply)(nil), "pb.RequestBlockProposalReply")
	proto.RegisterType((*RequestProposalTransactions)(nil), "pb.RequestProposalTransactions")
	proto.RegisterType((*RequestProposalTransactionsReply)(nil), "pb.RequestProposalTransactionsReply")
	proto.RegisterType((*GetConsensusState)(nil), "pb.GetConsensusState")
	proto.RegisterType((*GetConsensusStateReply)(nil), "pb.GetConsensusStateReply")
	proto.RegisterType((*GetBlockHeaders)(nil), "pb.GetBlockHeaders")
	proto.RegisterType((*GetBlockHeadersReply)(nil), "pb.GetBlockHeadersReply")
	proto.RegisterType((*GetBlocks)(nil), "pb.GetBlocks")
	proto.RegisterType((*GetBlocksReply)(nil), "pb.GetBlocksReply")
	proto.RegisterType((*Relay)(nil), "pb.Relay")
	proto.RegisterType((*Transactions)(nil), "pb.Transactions")
	proto.RegisterType((*BacktrackSignatureChain)(nil), "pb.BacktrackSignatureChain")
	proto.RegisterType((*IHaveSignatureChainTransaction)(nil), "pb.IHaveSignatureChainTransaction")
	proto.RegisterType((*RequestSignatureChainTransaction)(nil), "pb.RequestSignatureChainTransaction")
	proto.RegisterType((*RequestSignatureChainTransactionReply)(nil), "pb.RequestSignatureChainTransactionReply")
	proto.RegisterType((*PinSignatureChain)(nil), "pb.PinSignatureChain")
	proto.RegisterType((*SignatureChainObjectionUnsigned)(nil), "pb.SignatureChainObjectionUnsigned")
	proto.RegisterType((*SignatureChainObjectionSigned)(nil), "pb.SignatureChainObjectionSigned")
	proto.RegisterEnum("pb.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("pb.AllowedSignedMessageType", AllowedSignedMessageType_name, AllowedSignedMessageType_value)
	proto.RegisterEnum("pb.AllowedUnsignedMessageType", AllowedUnsignedMessageType_name, AllowedUnsignedMessageType_value)
	proto.RegisterEnum("pb.AllowedDirectMessageType", AllowedDirectMessageType_name, AllowedDirectMessageType_value)
	proto.RegisterEnum("pb.AllowedRelayMessageType", AllowedRelayMessageType_name, AllowedRelayMessageType_value)
	proto.RegisterEnum("pb.AllowedBroadcastPushMessageType", AllowedBroadcastPushMessageType_name, AllowedBroadcastPushMessageType_value)
	proto.RegisterEnum("pb.AllowedBroadcastPullMessageType", AllowedBroadcastPullMessageType_name, AllowedBroadcastPullMessageType_value)
	proto.RegisterEnum("pb.AllowedBroadcastTreeMessageType", AllowedBroadcastTreeMessageType_name, AllowedBroadcastTreeMessageType_value)
	proto.RegisterEnum("pb.RequestTransactionType", RequestTransactionType_name, RequestTransactionType_value)
}

func init() { proto.RegisterFile("pb/nodemessage.proto", fileDescriptor_nodemessage_f46acc8cd5d29581) }

var fileDescriptor_nodemessage_f46acc8cd5d29581 = []byte{
	// 1657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x56, 0xdb, 0xda,
	0x15, 0x8e, 0xf9, 0xf7, 0xc6, 0x3f, 0xf2, 0xe1, 0xcf, 0x40, 0x08, 0xa0, 0x04, 0x42, 0x9c, 0x14,
	0x12, 0x68, 0xb3, 0xb2, 0xba, 0xda, 0x81, 0x6c, 0x54, 0xec, 0xe2, 0xd8, 0xae, 0x24, 0x48, 0xd3,
	0x89, 0x96, 0x6c, 0x9f, 0xd8, 0x2a, 0xb2, 0xe4, 0xea, 0x88, 0x34, 0xce, 0x1b, 0x74, 0xd6, 0x37,
	0xe8, 0x53, 0x74, 0xd6, 0x17, 0xea, 0xba, 0xf3, 0x3b, 0xbe, 0x4b, 0x47, 0x47, 0x42, 0x96, 0x25,
	0x13, 0x72, 0xef, 0xe0, 0xce, 0x38, 0x7b, 0x7f, 0xfb, 0xef, 0xd3, 0xfe, 0x8e, 0x84, 0x61, 0x75,
	0xd8, 0x3e, 0x31, 0xad, 0x2e, 0x1e, 0x60, 0x42, 0xb4, 0x1e, 0x3e, 0x1e, 0xda, 0x96, 0x63, 0xa1,
	0x99, 0x61, 0x7b, 0x2b, 0xcb, 0x3c, 0x9e, 0x69, 0xab, 0x30, 0x6c, 0x9f, 0x10, 0xbd, 0xd7, 0xe9,
	0x6b, 0xba, 0xc9, 0x4c, 0xb9, 0x61, 0xfb, 0xa4, 0x6d, 0x58, 0x9d, 0x1b, 0x76, 0x76, 0x73, 0x39,
	0xb6, 0x66, 0x12, 0xad, 0xe3, 0xe8, 0x16, 0x43, 0xf1, 0x2a, 0xe4, 0xaf, 0x4c, 0xa2, 0xf7, 0x4c,
	0xdc, 0x7d, 0xef, 0x15, 0x41, 0xa7, 0x90, 0x61, 0xf5, 0x54, 0x67, 0x34, 0xc4, 0xc5, 0xd4, 0x5e,
	0xea, 0x28, 0x77, 0x9a, 0x3f, 0x1e, 0xb6, 0x8f, 0x19, 0x44, 0x19, 0x0d, 0xb1, 0xb4, 0x3c, 0xb8,
	0x3b, 0xa0, 0x22, 0x2c, 0xb2, 0x63, 0x71, 0x66, 0x2f, 0x75, 0x94, 0x91, 0xfc, 0x23, 0x7f, 0x01,
	0x59, 0x79, 0x2c, 0x7d, 0x08, 0x9a, 0x1a, 0x83, 0xa2, 0xc7, 0x90, 0x76, 0x3b, 0xd1, 0x9c, 0x5b,
	0xdb, 0x4f, 0x73, 0x67, 0xe0, 0xff, 0x08, 0x73, 0xd7, 0x96, 0x83, 0xd1, 0x3a, 0x2c, 0xf4, 0xb1,
	0xde, 0xeb, 0x3b, 0x34, 0x3c, 0x2b, 0xb1, 0x13, 0xda, 0x01, 0xa0, 0xe3, 0xaa, 0x7d, 0x8d, 0xf4,
	0xfd, 0x70, 0x6a, 0xa9, 0x6a, 0xa4, 0xcf, 0x5f, 0x02, 0xaa, 0x55, 0xb5, 0xcf, 0xb8, 0xec, 0x5a,
	0x5a, 0xb6, 0x35, 0xb4, 0x88, 0x66, 0x7c, 0x6f, 0xb2, 0xff, 0xa6, 0x60, 0x55, 0xc2, 0xff, 0xb8,
	0xc5, 0xc4, 0x19, 0xcf, 0x37, 0x1e, 0x97, 0x8a, 0xc4, 0xa1, 0x63, 0x98, 0xa3, 0x94, 0xce, 0x50,
	0x4a, 0xb7, 0x5c, 0x4a, 0x59, 0x1a, 0xe5, 0xee, 0xc9, 0x50, 0x76, 0x29, 0x0e, 0x1d, 0x42, 0x9e,
	0xf4, 0x2d, 0xdb, 0xa1, 0xe9, 0x54, 0xa2, 0x19, 0x4e, 0x71, 0x96, 0xe6, 0xcc, 0x52, 0xb3, 0x9b,
	0x53, 0xd6, 0x0c, 0x27, 0x8a, 0xd3, 0xbf, 0xe2, 0xe2, 0x1c, 0x9d, 0x27, 0x84, 0xd3, 0xbf, 0x62,
	0x5e, 0x87, 0xcd, 0xb8, 0xb6, 0x25, 0x3c, 0x34, 0x46, 0x68, 0x17, 0xe6, 0x69, 0xa7, 0xb4, 0xed,
	0xe5, 0xd3, 0xb4, 0xdb, 0x1d, 0x85, 0x49, 0x9e, 0x1d, 0xbd, 0x84, 0x42, 0x68, 0x81, 0x88, 0xcf,
	0xcd, 0xec, 0x51, 0x46, 0xe2, 0xc2, 0x0e, 0x4a, 0xd1, 0xff, 0x53, 0xb0, 0xcd, 0x6a, 0xf9, 0x65,
	0x42, 0x33, 0x92, 0x5f, 0x39, 0x53, 0xf1, 0xb3, 0xce, 0x27, 0xcc, 0xfa, 0x01, 0xf6, 0xa6, 0x8c,
	0xea, 0xb1, 0x7b, 0x06, 0x99, 0x70, 0x5c, 0x31, 0xb5, 0x37, 0x7b, 0xb4, 0xec, 0xa9, 0x2a, 0x04,
	0x96, 0xc6, 0x40, 0xfc, 0x0a, 0x14, 0x2e, 0xb0, 0x53, 0xb1, 0x4c, 0x82, 0x4d, 0x72, 0x4b, 0x64,
	0x47, 0x73, 0x30, 0xff, 0x63, 0x0a, 0xd6, 0x27, 0xac, 0x5e, 0x91, 0x12, 0x14, 0x0c, 0xdc, 0xed,
	0x61, 0x5b, 0x9d, 0xd8, 0xde, 0xbc, 0xe7, 0x28, 0x07, 0x0c, 0x3f, 0x85, 0x2c, 0xc3, 0x8e, 0x29,
	0x20, 0xe3, 0x19, 0xab, 0x9e, 0x0e, 0x5e, 0x00, 0xd7, 0xf1, 0xeb, 0xf8, 0xb8, 0x59, 0x8a, 0xcb,
	0x07, 0x76, 0x06, 0x3d, 0x85, 0xb5, 0x81, 0x6e, 0xaa, 0x9f, 0xb1, 0xad, 0x7f, 0xd2, 0xb5, 0xb6,
	0x81, 0x7d, 0xfc, 0x3c, 0xc5, 0xaf, 0x0c, 0x74, 0xf3, 0x3a, 0xf0, 0xb1, 0x98, 0x57, 0x00, 0x64,
	0x64, 0x76, 0x54, 0xe2, 0x8e, 0x40, 0x1f, 0x44, 0xee, 0x34, 0xeb, 0x52, 0x22, 0x8f, 0xcc, 0x8e,
	0x37, 0x57, 0x9a, 0xf8, 0x7f, 0xf2, 0x32, 0xe4, 0x2f, 0xb0, 0xb7, 0xb9, 0x55, 0xac, 0x75, 0xb1,
	0x4d, 0xd0, 0x3e, 0x64, 0x88, 0xa3, 0xb9, 0x8f, 0x33, 0x3c, 0xc3, 0x32, 0xb5, 0x55, 0x03, 0x29,
	0x63, 0xb3, 0xeb, 0x03, 0x66, 0x28, 0x20, 0x8d, 0xcd, 0xae, 0xe7, 0xe6, 0x2f, 0x60, 0x35, 0x92,
	0xd4, 0xa3, 0xf2, 0x04, 0xb2, 0x8c, 0x43, 0xcf, 0xca, 0x1e, 0x18, 0xb8, 0xdd, 0x79, 0x40, 0x29,
	0xd3, 0x0e, 0x45, 0xf1, 0xef, 0x21, 0xed, 0x27, 0xfa, 0x25, 0xfa, 0x3a, 0x83, 0x5c, 0x90, 0xce,
	0xeb, 0x68, 0x1f, 0x16, 0x68, 0x41, 0xbf, 0x95, 0x90, 0x40, 0x99, 0x83, 0xff, 0xf7, 0x0c, 0xcc,
	0x4b, 0xd8, 0xd0, 0x46, 0xe8, 0x00, 0x72, 0xc4, 0xee, 0xa8, 0x7a, 0x17, 0x9b, 0x8e, 0xfe, 0x49,
	0xc7, 0x36, 0x6d, 0x21, 0x2d, 0x65, 0x89, 0xdd, 0xa9, 0x05, 0x46, 0xb7, 0x09, 0x17, 0x36, 0xbc,
	0x6d, 0xdf, 0xe0, 0x51, 0x71, 0x81, 0xdd, 0xb9, 0x76, 0xa7, 0x45, 0x0d, 0x68, 0x03, 0x16, 0xbb,
	0x98, 0x38, 0xaa, 0xde, 0x65, 0x5b, 0xb4, 0xe0, 0x1e, 0x6b, 0x5d, 0xf7, 0x12, 0x1f, 0x6a, 0x23,
	0xc3, 0xd2, 0xba, 0x4c, 0x66, 0xfe, 0x11, 0x1d, 0xc3, 0xca, 0x40, 0xfb, 0xa2, 0xf6, 0x2d, 0xa3,
	0xab, 0x9b, 0x3d, 0x95, 0xe0, 0x8e, 0x65, 0x76, 0x09, 0x5b, 0x82, 0xc2, 0x40, 0xfb, 0x52, 0xf5,
	0x3c, 0xb2, 0xe7, 0x88, 0xdc, 0x03, 0x8b, 0xd1, 0x7b, 0x60, 0x1b, 0xd2, 0x86, 0x46, 0x3c, 0xb9,
	0x16, 0x97, 0xa8, 0x77, 0xc9, 0x35, 0x50, 0x27, 0x0f, 0x59, 0xa2, 0xf7, 0x54, 0xfa, 0xd6, 0x53,
	0x0d, 0x6c, 0x16, 0xd3, 0x8c, 0x66, 0xbd, 0x57, 0x71, 0x6d, 0x75, 0x6c, 0xf2, 0x15, 0xc8, 0x8c,
	0xdd, 0x3b, 0xdf, 0xa5, 0xc3, 0x1e, 0x6c, 0x94, 0xb5, 0xce, 0x8d, 0x63, 0x6b, 0x9d, 0x1b, 0xd9,
	0x7f, 0x23, 0xd1, 0x12, 0xe8, 0x1d, 0xe4, 0xef, 0x7a, 0xc0, 0x06, 0x1e, 0xf8, 0x29, 0x39, 0xba,
	0xc7, 0xac, 0x13, 0xd1, 0xc0, 0x03, 0x29, 0x4b, 0x42, 0x27, 0x82, 0x10, 0xcc, 0x85, 0xf4, 0x49,
	0xff, 0xe6, 0x55, 0x78, 0x42, 0xdf, 0x52, 0xe3, 0x45, 0x42, 0x8d, 0x25, 0xbe, 0xb1, 0xdc, 0x07,
	0xee, 0x07, 0x85, 0x75, 0x9f, 0x0d, 0xac, 0xf4, 0xaa, 0xaa, 0x05, 0x57, 0x55, 0x72, 0x89, 0xc9,
	0x54, 0xa9, 0xb8, 0x54, 0x7f, 0x83, 0x83, 0xfb, 0x52, 0x79, 0x8b, 0xfb, 0x06, 0x96, 0x43, 0x6c,
	0xb2, 0xd7, 0xcb, 0x04, 0xe3, 0x61, 0x0c, 0xff, 0x1c, 0x0a, 0x2d, 0xdd, 0x8c, 0x50, 0xed, 0x13,
	0x96, 0x0a, 0x11, 0xf6, 0xaf, 0x14, 0xec, 0x8e, 0xc3, 0x9a, 0xed, 0xbf, 0x63, 0x9a, 0xc4, 0xff,
	0xae, 0xf9, 0x99, 0x94, 0xa1, 0xe7, 0x90, 0xb7, 0xf1, 0xd0, 0xb2, 0x1d, 0x6c, 0xfb, 0x42, 0xf1,
	0x76, 0x3e, 0xe7, 0x9b, 0x3d, 0xb5, 0xf0, 0x1f, 0x60, 0x27, 0xa1, 0x15, 0xef, 0x0b, 0xe8, 0x7b,
	0x3f, 0x7d, 0x4a, 0x3f, 0xcc, 0xc1, 0x72, 0xe8, 0xd3, 0x0b, 0x3d, 0x87, 0xa7, 0xef, 0x45, 0x59,
	0x16, 0x2e, 0x44, 0x55, 0xf9, 0xd8, 0x12, 0xd5, 0x56, 0x5d, 0xa8, 0x88, 0xd5, 0x66, 0xfd, 0x5c,
	0x94, 0xd4, 0xf3, 0xa6, 0xda, 0x68, 0x2a, 0xea, 0x95, 0x2c, 0x72, 0x8f, 0xd0, 0x12, 0xcc, 0x5d,
	0x37, 0x15, 0x91, 0x4b, 0xa1, 0x4d, 0x58, 0xab, 0xa9, 0x55, 0xe1, 0x5a, 0x54, 0xcb, 0xf5, 0x66,
	0xe5, 0x52, 0x6d, 0x49, 0xcd, 0x56, 0x53, 0x16, 0xea, 0xdc, 0x0c, 0xda, 0x82, 0x75, 0x49, 0xfc,
	0xcb, 0x95, 0x28, 0x2b, 0x51, 0xdf, 0x2c, 0xda, 0x83, 0xc7, 0xf1, 0x3e, 0x55, 0x12, 0x5b, 0xf5,
	0x8f, 0xdc, 0x1c, 0xda, 0x80, 0x95, 0x0b, 0x51, 0x51, 0x2b, 0xcd, 0x86, 0x2c, 0x36, 0xe4, 0x2b,
	0x59, 0x95, 0x15, 0x41, 0x11, 0xb9, 0x79, 0xb4, 0x03, 0x9b, 0x31, 0x0e, 0x16, 0xb7, 0x80, 0xd6,
	0xa0, 0xe0, 0xba, 0xbd, 0xac, 0x55, 0x51, 0x38, 0x17, 0x25, 0x99, 0x5b, 0x44, 0xdb, 0xb0, 0x31,
	0x61, 0x66, 0x31, 0x4b, 0x28, 0x07, 0x10, 0x38, 0x65, 0x2e, 0x8d, 0x56, 0x81, 0xbb, 0x3b, 0x33,
	0x14, 0xa0, 0x34, 0xcc, 0x4b, 0x62, 0x5d, 0xf8, 0xc8, 0x2d, 0x23, 0x0e, 0x32, 0x8a, 0x24, 0x34,
	0x64, 0xa1, 0xa2, 0xd4, 0x9a, 0x0d, 0x99, 0xcb, 0xb8, 0x5d, 0x95, 0x85, 0xca, 0xa5, 0x22, 0x09,
	0x95, 0x4b, 0x55, 0xae, 0x5d, 0x34, 0x04, 0xe5, 0x4a, 0x12, 0xd5, 0x4a, 0x55, 0xa8, 0x35, 0xb8,
	0x2c, 0xda, 0x87, 0x1d, 0x7f, 0xde, 0x60, 0xd2, 0xb1, 0x0c, 0x39, 0x97, 0xfc, 0xa9, 0x10, 0xd6,
	0x47, 0x1e, 0x1d, 0x02, 0xcf, 0x28, 0x8f, 0xd4, 0x09, 0xc3, 0x39, 0x2e, 0x9c, 0x70, 0x1a, 0xb0,
	0x80, 0x7e, 0x03, 0x2f, 0xbe, 0x01, 0xc8, 0xea, 0x23, 0xf7, 0xc9, 0xb4, 0x6a, 0x8d, 0x89, 0x21,
	0x57, 0x5c, 0x0e, 0xa2, 0xf1, 0xcd, 0xf2, 0x9f, 0x45, 0xaf, 0xcc, 0x6a, 0xa9, 0x02, 0x45, 0xc1,
	0x30, 0xac, 0x7f, 0xe2, 0xee, 0xd8, 0x87, 0xbb, 0xbf, 0x79, 0x42, 0xbd, 0xde, 0xfc, 0x40, 0xb3,
	0x8a, 0xe7, 0x89, 0x9b, 0x57, 0xfa, 0xcf, 0x22, 0x6c, 0xb1, 0x2c, 0x91, 0xff, 0x2f, 0x68, 0x9e,
	0x17, 0x70, 0xe0, 0xe5, 0xb9, 0x6a, 0xdc, 0x93, 0xc9, 0x1d, 0x23, 0x02, 0x65, 0x2b, 0x7d, 0x04,
	0xcf, 0x22, 0x8e, 0xa4, 0x0d, 0x9f, 0xac, 0x96, 0xb8, 0xf0, 0x87, 0xc0, 0x4f, 0x85, 0xfa, 0x6b,
	0x3f, 0x89, 0x8b, 0x57, 0xc1, 0x2b, 0x38, 0xba, 0x1f, 0x17, 0x88, 0xe2, 0x19, 0xec, 0xc5, 0xa0,
	0xa3, 0x1a, 0x29, 0xc1, 0xe1, 0x7d, 0xa8, 0x40, 0x32, 0x3b, 0xb0, 0x99, 0x84, 0x75, 0x15, 0xf4,
	0x14, 0x76, 0x13, 0xdd, 0x81, 0xa0, 0x8a, 0xb0, 0x3a, 0xc1, 0x89, 0xa7, 0xaf, 0x5d, 0xd8, 0x8e,
	0x78, 0x22, 0x72, 0x9b, 0x1c, 0x7f, 0x9a, 0xfa, 0x5e, 0xc3, 0xab, 0x04, 0xf2, 0x93, 0xc4, 0xf8,
	0x16, 0x4e, 0x1f, 0x12, 0x11, 0x68, 0xf3, 0x77, 0xf0, 0x26, 0x7e, 0x77, 0xa6, 0x4b, 0x35, 0xb9,
	0xdc, 0x74, 0xe5, 0xfe, 0x01, 0xde, 0x3d, 0x3c, 0x2e, 0x10, 0xf2, 0xe4, 0xae, 0xc5, 0xeb, 0x7a,
	0x92, 0xec, 0x69, 0x32, 0xff, 0xdf, 0x42, 0xa0, 0xf3, 0x73, 0xdd, 0xc6, 0x1d, 0x27, 0x56, 0xe7,
	0xe7, 0x35, 0x49, 0xac, 0x28, 0xc9, 0xea, 0x5c, 0x83, 0xc2, 0x18, 0x90, 0x69, 0x33, 0x68, 0x99,
	0x99, 0x93, 0x94, 0x19, 0xad, 0x93, 0xa8, 0xcb, 0x40, 0x19, 0xb1, 0x40, 0x5f, 0x95, 0x51, 0x54,
	0xbc, 0x26, 0x03, 0xfd, 0x24, 0xa3, 0x02, 0x45, 0xf2, 0xf0, 0x64, 0x02, 0x1b, 0xd5, 0x63, 0x70,
	0x11, 0x25, 0x61, 0x02, 0x35, 0x6e, 0xc3, 0x46, 0x3c, 0xd2, 0xd5, 0xe2, 0x3e, 0xec, 0x24, 0x38,
	0x03, 0x25, 0x46, 0x3b, 0x9f, 0x26, 0xa6, 0x63, 0x28, 0xc5, 0x32, 0x96, 0x24, 0xa5, 0xdf, 0xc2,
	0xeb, 0x6f, 0xc7, 0x07, 0x42, 0x3a, 0x83, 0x93, 0xb8, 0x07, 0x3d, 0x5d, 0x46, 0x49, 0xa5, 0xa6,
	0x8b, 0xe8, 0xf7, 0xf0, 0xf6, 0xa1, 0x51, 0x81, 0x84, 0xa2, 0x8b, 0x11, 0x2f, 0xa0, 0x28, 0xbd,
	0xd3, 0xe4, 0xf3, 0x57, 0xd8, 0x60, 0xea, 0xa1, 0xff, 0x70, 0x85, 0xc5, 0x13, 0x2c, 0x3f, 0xbd,
	0x26, 0xbf, 0x41, 0x3b, 0x1e, 0x8e, 0x5d, 0xaa, 0xa5, 0x11, 0xec, 0xb2, 0xcc, 0x65, 0xdb, 0xd2,
	0xba, 0x1d, 0x8d, 0x38, 0xad, 0x5b, 0xd2, 0x0f, 0x57, 0x38, 0x81, 0x97, 0x5e, 0x64, 0x59, 0x6a,
	0x0a, 0xe7, 0x15, 0xc1, 0x7d, 0x4c, 0x57, 0x72, 0x35, 0xb9, 0xd4, 0x01, 0xec, 0xc7, 0x06, 0x8c,
	0x5f, 0xd7, 0x25, 0x29, 0xae, 0xb4, 0x61, 0xdc, 0x5b, 0xba, 0x5e, 0x4f, 0xfe, 0x12, 0x88, 0x19,
	0x47, 0xb1, 0x31, 0xbe, 0x27, 0xa7, 0x22, 0x89, 0xe2, 0x83, 0xc6, 0xa1, 0x01, 0x91, 0x71, 0xbe,
	0xc0, 0x7a, 0xfc, 0x8f, 0x46, 0xe8, 0x31, 0x14, 0xfd, 0xf5, 0xf9, 0x93, 0xdb, 0x7d, 0x78, 0xd3,
	0x1e, 0x85, 0xbd, 0xe1, 0x65, 0xaa, 0x0a, 0x72, 0x95, 0x4b, 0xb9, 0x57, 0x42, 0x9c, 0x57, 0xae,
	0x36, 0x25, 0xc5, 0xc3, 0xcc, 0xb4, 0x17, 0xe8, 0xaf, 0xab, 0x67, 0x3f, 0x05, 0x00, 0x00, 0xff,
	0xff, 0xc5, 0x53, 0xb8, 0xd7, 0xc1, 0x15, 0x00, 0x00,
}
